{"version":3,"sources":["oneContact/OneContact.module.css","services/api.js","redux/contacts/contactsType.js","redux/contacts/contactsAction.js","redux/contacts/contactsOperations.js","phonebook/Phonebook.js","oneContact/OneContact.js","redux/contacts/contactSelectors.js","filterContacts/FilterContacts.jsx","contactList/ContactList.js","themeContext/ThemeContext.jsx","App.js","hoc/withTheme.jsx","redux/contacts/contactsReducer.js","redux/rootReducer.js","redux/store.js","index.js","phonebook/Phonebook.module.css"],"names":["module","exports","axios","defaults","baseURL","get","contact","post","id","delete","type","contactsType","contactList","payload","error","idContactDelete","nameContact","name","dispatch","contactsActions","api","then","data","catch","number","Phonebook","state","contactName","handleChange","target","value","setState","handleSubmit","e","preventDefault","addContact","props","this","onSubmit","style","marginLeft","className","styles","title","inputName","onChange","placeholder","required","inputNumber","btn","Component","connect","contactsOperations","deleteContact","oneContact","btnDelete","onClick","filterContact","contactRoot","filterReducer","createSelector","contactReducer","contacts","searchInput","filter","toLowerCase","includes","contactsAction","letterSpacing","height","marginBottom","ContactList","getAllContacts","color","map","key","console","log","Context","createContext","themeConfig","light","fontColor","bodybg","dark","ThemeContext","toggleTheme","prevTheme","theme","Provider","children","Consumer","withTheme","WrappedComponent","context","filterByName","contactStorage","localStorage","getItem","JSON","parse","prevProps","prevState","setItem","stringify","background","marginTop","borderColor","width","backgroundColor","fontWeight","combineReducers","action","loading","contactError","rootReducer","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,UAAY,8BAA8B,WAAa,iC,mMCCzEC,IAAMC,SAASC,QAAU,wBAEzB,IAMe,EANQ,kBAAMF,IAAMG,IAAI,cAMxB,EAJI,SAACC,GAAD,OAAaJ,IAAMK,KAAK,YAAaD,IAIzC,EAFO,SAACE,GAAD,OAAQN,IAAMO,OAAN,oBAA0BD,KCRzC,EACM,6BADN,EAEQ,+BAFR,EAGQ,+BAHR,EAKM,6BALN,EAMQ,+BANR,EAOQ,+BAPR,EASS,gCATT,EAUW,kCAVX,EAWW,kCAXX,EAaG,0BCmDH,EA7DS,iBAAO,CAC7BE,KAAMC,IA4DO,EAzDW,SAACC,GAAD,MAAkB,CAC1CF,KAAMC,EAENE,QAAS,CAAED,iBAsDE,EAnDW,SAACE,GAAD,MAAY,CACpCJ,KAAMC,EAENE,QAAS,CAAEC,WAgDE,EA5CS,iBAAO,CAC7BJ,KAAMC,IA2CO,EAxCW,SAACL,GAAD,MAAc,CACtCI,KAAMC,EAENE,QAAS,CACPP,aAoCW,EAhCW,SAACQ,GAAD,MAAY,CACpCJ,KAAMC,EAENE,QAAS,CAAEC,WA6BE,EAzBY,iBAAO,CAChCJ,KAAMC,IAwBO,EArBc,SAACI,GAAD,MAAsB,CACjDL,KAAMC,EAENE,QAAS,CAAEL,GAAIO,KAkBF,EAfc,SAACD,GAAD,MAAY,CACvCJ,KAAMC,EAENE,QAAS,CAAEC,WAYE,EARO,SAACE,GAAD,MAAkB,CACtCN,KAAMC,EAENE,QAAS,CACPI,KAAMD,KC9BK,EA3BkB,kBAAM,SAACE,GACtCA,EAASC,KAETC,IAEGC,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcJ,EAASC,EAAkCG,OAC9DC,OAAM,SAACT,GAAD,OAAWI,EAASC,EAAkCL,SAqBlD,EAlBc,SAACG,EAAMO,GAAP,OAAkB,SAACN,GAC9CA,EAASC,KAETC,EACc,CAAEH,OAAMO,WACnBH,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcJ,EAASC,EAAkCG,OAC9DC,OAAM,SAACT,GAAD,OAAWI,EAASC,EAAkCL,SAYlD,EATiB,SAACN,GAAD,OAAQ,SAACU,GACvCA,EAASC,KAETC,EACiBZ,GACda,MAAK,kBAAMH,EAASC,EAAqCX,OACzDe,OAAM,SAACT,GAAD,OAAWI,EAASC,EAAqCL,SCtB9DW,E,4MACJC,MAAQ,CACNC,YAAa,GACbH,OAAQ,I,EAGVI,aAAe,YAAiB,IAAdC,EAAa,EAAbA,OACRZ,EAAgBY,EAAhBZ,KAAMa,EAAUD,EAAVC,MACd,EAAKC,SAAL,eAAiBd,EAAOa,K,EAG1BE,aAAe,SAACC,GACdA,EAAEC,iBADkB,MAEY,EAAKR,MAA7BC,EAFY,EAEZA,YAAaH,EAFD,EAECA,OACbW,EAAe,EAAKC,MAApBD,WAER,EAAKJ,SAAS,CACZJ,YAAa,GACbH,OAAQ,KAEVW,EAAWR,EAAaH,I,uDAGjB,MAEyBa,KAAKX,MAA7BC,EAFD,EAECA,YAAaH,EAFd,EAEcA,OAErB,OACE,0BAAMc,SAAUD,KAAKL,aAAcO,MAAO,CAAEC,WAAY,SACtD,wBAAIC,UAAWC,IAAOC,OAAtB,aAEA,2BACEF,UAAWC,IAAOE,UAClBlC,KAAK,OACLO,KAAK,cACLa,MAAOH,EACPkB,SAAUR,KAAKT,aACfkB,YAAY,gBACZC,UAAQ,IAGV,2BACEN,UAAWC,IAAOM,YAClBtC,KAAK,MACLO,KAAK,SACLa,MAAON,EACPqB,SAAUR,KAAKT,aACfkB,YAAY,YACZC,UAAQ,IAGV,4BAAQrC,KAAK,SAAS+B,UAAWC,IAAOO,KAAxC,oB,GAnDgBC,aA8DTC,cAAQ,MALI,SAACjC,GAAD,MAAe,CACxCiB,WAAY,SAAClB,EAAMO,GAAP,OACVN,EAASkC,EAAwCnC,EAAMO,QAG5C2B,CAAkC1B,G,iBCvClC0B,cAAQ,MAPI,SAACjC,EAAD,GAAuB,IAAVV,EAAS,EAATA,GACtC,MAAO,CACL6C,cAAe,kBACbnC,EAASkC,EAA2C5C,QAI3C2C,EAvBI,SAAC,GAAsD,IAAD,IAAnD7C,QAAeW,GAAoC,EAAxCT,GAAwC,EAApCS,MAAMO,EAA8B,EAA9BA,OAAU6B,EAAoB,EAApBA,cACnD,OACE,wBAAIZ,UAAWC,IAAOY,YACpB,8BAAOrC,EAAP,MACA,8BAAOO,GACP,4BACEd,KAAK,SACL+B,UAAWC,IAAOa,UAClBC,QAASH,GAHX,c,QCLOI,EAAgB,SAAC/B,GAAD,OAAWA,EAAMgC,YAAYC,eAM7C/C,EAAcgD,YACzB,CAVwB,SAAClC,GAAD,OAAWA,EAAMgC,YAAYG,gBAUxCJ,IACb,SAACK,EAAUC,GACT,OAAOD,EAASE,QAAO,SAAC1D,GAAD,OACrBA,EAAQW,KAAKgD,cAAcC,SAASH,EAAYE,qBCwBvCd,eAZS,SAACzB,GACvB,MAAO,CACLsC,OAAQP,EAAc/B,OAIC,SAACR,GAC1B,MAAO,CACL2B,SAAU,SAACZ,GAAD,OAAOf,EAASiD,EAA6BlC,EAAEJ,OAAOC,YAIrDqB,EAlCQ,SAAC,GAA0B,IAAxBa,EAAuB,EAAvBA,OAAQnB,EAAe,EAAfA,SAChC,OACE,oCACE,wBACEN,MAAO,CACLC,WAAY,OACZ4B,cAAe,QAHnB,0BAQA,2BACE7B,MAAO,CAAEC,WAAY,OAAQ6B,OAAQ,OAAQC,aAAc,QAC3D5D,KAAK,OACLO,KAAK,SACLa,MAAOkC,EACPnB,SAAUA,QCdZ0B,E,mLAGFC,EAD2BnC,KAAKD,MAAxBoC,oB,+BAIA,IAAD,EACmCnC,KAAKD,MAAvCxB,EADD,EACCA,YAAaoD,EADd,EACcA,OAAQnB,EADtB,EACsBA,SAE7B,OACE,oCACE,wBAAIN,MAAO,CAAEC,WAAY,OAAQiC,MAAO,SAAxC,YACA,kBAAC,EAAD,CAAgBT,OAAQA,EAAQnB,SAAUA,IAC1C,4BACGjC,EAAY8D,KAAI,SAACpE,GAAD,OACf,kBAAC,EAAD,CAAYE,GAAIF,EAAQE,GAAIF,QAASA,EAASqE,IAAKrE,EAAQE,c,GAf7C0C,aAqCXC,eAdS,SAACzB,GAEvB,OADAkD,QAAQC,IAAI,QAASnD,GACd,CACLd,YAAaA,EAAYc,OAIF,SAACR,GAC1B,MAAO,CACLsD,eAAgB,kBACdtD,EAASkC,SAIAD,CAA6CoB,GC1CtDO,GAAUC,0BACVC,GAAc,CAClBC,MAAO,CACLC,UAAW,QACXC,OAAQ,SAEVC,KAAM,CACJF,UAAW,QACXC,OAAQ,UAINE,G,4MAGJC,YAAc,WACZ,EAAKvD,UAAS,SAACwD,GACb,MAAwB,UAApBA,EAAUC,MACL,CAAEA,MAAO,OAAQR,YAAaA,GAAYI,MAE1C,CAAEI,MAAO,QAASR,YAAaA,GAAYC,W,EAKxDvD,MAAQ,CACN8D,MAAO,QACPR,YAAaA,GAAYC,MACzBK,YAAa,EAAKA,a,uDAIlB,OACE,kBAACR,GAAQW,SAAT,CAAkB3D,MAAOO,KAAKX,OAC3BW,KAAKD,MAAMsD,c,GAtBOxC,aAArBmC,GACGM,SAAWb,GAAQa,SA2BbN,UCqBAO,GC5DG,SAACC,GACjB,OAAO,SAAmBzD,GACxB,OACE,kBAAC,GAAauD,SAAd,MACG,SAACG,GAEA,OACE,kBAACD,EAAD,iBACMzD,EADN,CAEEoD,MAAOM,EAAQN,MACfR,YAAac,EAAQd,YACrBM,YAAaQ,EAAQR,mBDiDpBM,C,4MAxDblE,MAAQ,CACNsC,OAAQ,I,EAgBV+B,aAAe,a,EAEf1C,cAAgB,SAAC7C,K,kEAdf,IAAMwF,EAAiBC,aAAaC,QAAQ,YACxCF,GACF3D,KAAKN,SAAS,CAAE+B,SAAUqC,KAAKC,MAAMJ,O,yCAItBK,EAAWC,GACxBA,EAAUxC,WAAazB,KAAKX,MAAMoC,UACpCmC,aAAaM,QAAQ,WAAYJ,KAAKK,UAAUnE,KAAKX,MAAMoC,a,+BASvCzB,KAAK0D,eAA3B,IADO,EAMH1D,KAAKD,MADP4C,YAAeE,EALV,EAKUA,UAAWC,EALrB,EAKqBA,OAEpBnB,EAAW3B,KAAKX,MAAhBsC,OACR,OACE,yBAAKzB,MAAO,CAAEkC,MAAOS,EAAWuB,WAAYtB,IAC1C,4BACEzE,KAAK,SACL6B,MAAO,CACLC,WAAY,OACZkE,UAAW,OACXC,YAAa,QACbtC,OAAQ,OACRuC,MAAO,QACPC,gBAAiB,QACjBpC,MAAO,QACPqC,WAAY,OACZ1C,cAAe,OAEjBZ,QAASnB,KAAKD,MAAMkD,aAbtB,gBAiBA,kBAAC,EAAD,CAAWrE,KAAMoB,KAAKX,MAAMT,KAAMO,OAAQa,KAAKX,MAAMF,SAErD,kBAAC,EAAD,CAAawC,OAAQA,EAAQX,cAAehB,KAAKgB,qB,GAnDvCH,c,mCE8DH6D,8BAAgB,CAC7BlD,eAlEqB,WAAyB,IAAxBnC,EAAuB,uDAAf,GAAIsF,EAAW,uCAC7C,OAAQA,EAAOtG,MACb,KAAKC,EACH,OAAOqG,EAAOnG,QAAQD,YAExB,KAAKD,EACH,MAAM,GAAN,oBAAWe,GAAX,CAAkBsF,EAAOnG,QAAQP,UAEnC,KAAKK,EACH,OAAOe,EAAMsC,QAAO,SAAC1D,GAAD,OAAaA,EAAQE,KAAOwG,EAAOnG,QAAQL,MAEjE,QACE,OAAOkB,IAuDXiC,cAnDoB,WAAyB,IAAxBjC,EAAuB,uDAAf,GAAIsF,EAAW,uCAC5C,OAAQA,EAAOtG,MACb,KAAKC,EACH,OAAOqG,EAAOnG,QAAQI,KAExB,QACE,OAAOS,IA8CXuF,QA1CqB,WAA8B,IAA7BvF,EAA4B,iGAAXhB,EAAW,EAAXA,KACvC,OAAQA,GACN,KAAKC,EACL,KAAKA,EACL,KAAKA,EACH,OAAO,EAET,KAAKA,EACL,KAAKA,EAEL,KAAKA,EACL,KAAKA,EAEL,KAAKA,EACL,KAAKA,EACH,OAAO,EAET,QACE,OAAOe,IAyBXwF,aArB0B,WAAsC,IAArCxF,EAAoC,uDAA5B,KAA4B,yCAApBhB,EAAoB,EAApBA,KAAMG,EAAc,EAAdA,QACjD,OAAQH,GACN,KAAKC,EACL,KAAKA,EACL,KAAKA,EACH,OAAOE,EAAQC,MAEjB,KAAKH,EACL,KAAKA,EACL,KAAKA,EACH,OAAO,KAET,QACE,OAAOe,MCzDEyF,GAJKJ,2BAAgB,CAClCrD,YAAaG,KCCTuD,GAAa,CAACC,MAEPC,GAAQC,uBACnBJ,GACAK,+BAAoBC,mBAAe,WAAf,EAAmBL,MCFzCM,IAASC,OACP,kBAAC,IAAD,CAAUL,MAAOA,IACf,kBAAC,GAAD,KACE,kBAAC,GAAD,QAGJM,SAASC,eAAe,U,kBCZ1B7H,EAAOC,QAAU,CAAC,MAAQ,yBAAyB,IAAM,uBAAuB,UAAY,6BAA6B,YAAc,kC","file":"static/js/main.ec29aaf3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnDelete\":\"OneContact_btnDelete__2G4bG\",\"oneContact\":\"OneContact_oneContact__1joVK\"};","import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"http://localhost:4242\";\r\n\r\nconst getAllContacts = () => axios.get(\"/contacts\");\r\n\r\nconst addContact = (contact) => axios.post(\"/contacts\", contact);\r\n\r\nconst deleteContact = (id) => axios.delete(`/contacts/${id}`);\r\n\r\nexport default { getAllContacts, addContact, deleteContact };\r\n","export default {\r\n  GET_CONTACT_START: \"contacts/GET_CONTACT-START\",\r\n  GET_CONTACT_SUCCESS: \"contacts/GET_CONTACT_SUCCESS\",\r\n  GET_CONTACT_FAILURE: \"contacts/GET_CONTACT_FAILURE\",\r\n\r\n  ADD_CONTACT_START: \"contacts/ADD_CONTACT_START\",\r\n  ADD_CONTACT_SUCCESS: \"contacts/ADD_CONTACT_SUCCESS\",\r\n  ADD_CONTACT_FAILURE: \"contacts/ADD_CONTACT_FAILURE\",\r\n\r\n  DELETE_CONTACT_START: \"contacts/DELETE_CONTACT_START\",\r\n  DELETE_CONTACT_SUCCESS: \"contacts/DELETE_CONTACT_SUCCESS\",\r\n  DELETE_CONTACT_FAILURE: \"contacts/DELETE_CONTACT_FAILURE\",\r\n\r\n  FILTER_CONTACT: \"contacts/FILTER_CONTACT\",\r\n};\r\n","import contactsType from \"./contactsType\";\r\n\r\n/* GET */\r\nconst getContactStart = () => ({\r\n  type: contactsType.GET_CONTACT_START,\r\n});\r\n\r\nconst getContactSuccess = (contactList) => ({\r\n  type: contactsType.GET_CONTACT_SUCCESS,\r\n\r\n  payload: { contactList },\r\n});\r\n\r\nconst getContactFailure = (error) => ({\r\n  type: contactsType.GET_CONTACT_FAILURE,\r\n\r\n  payload: { error },\r\n});\r\n\r\n/* ADD */\r\nconst addContactStart = () => ({\r\n  type: contactsType.ADD_CONTACT_START,\r\n});\r\n\r\nconst addContactSuccess = (contact) => ({\r\n  type: contactsType.ADD_CONTACT_SUCCESS,\r\n\r\n  payload: {\r\n    contact,\r\n  },\r\n});\r\n\r\nconst addContactFailure = (error) => ({\r\n  type: contactsType.ADD_CONTACT_FAILURE,\r\n\r\n  payload: { error },\r\n});\r\n\r\n/* DELETE */\r\nconst deleteContactStart = () => ({\r\n  type: contactsType.DELETE_CONTACT_START,\r\n});\r\n\r\nconst deleteContactSuccess = (idContactDelete) => ({\r\n  type: contactsType.DELETE_CONTACT_SUCCESS,\r\n\r\n  payload: { id: idContactDelete },\r\n});\r\n\r\nconst deleteContactFailure = (error) => ({\r\n  type: contactsType.DELETE_CONTACT_FAILURE,\r\n\r\n  payload: { error },\r\n});\r\n\r\n/* FILTER */\r\nconst filterContact = (nameContact) => ({\r\n  type: contactsType.FILTER_CONTACT,\r\n\r\n  payload: {\r\n    name: nameContact,\r\n  },\r\n});\r\n\r\nexport default {\r\n  getContactStart,\r\n  getContactSuccess,\r\n  getContactFailure,\r\n\r\n  addContactStart,\r\n  addContactSuccess,\r\n  addContactFailure,\r\n\r\n  deleteContactStart,\r\n  deleteContactSuccess,\r\n  deleteContactFailure,\r\n\r\n  filterContact,\r\n};\r\n","import api from \"../../services/api\";\r\nimport contactsActions from \"./contactsAction\";\r\n\r\nconst getAllContactsOperations = () => (dispatch) => {\r\n  dispatch(contactsActions.getContactStart());\r\n\r\n  api\r\n    .getAllContacts()\r\n    .then(({ data }) => dispatch(contactsActions.getContactSuccess(data)))\r\n    .catch((error) => dispatch(contactsActions.getContactFailure(error)));\r\n};\r\n\r\nconst addContactOperations = (name, number) => (dispatch) => {\r\n  dispatch(contactsActions.addContactStart());\r\n\r\n  api\r\n    .addContact({ name, number })\r\n    .then(({ data }) => dispatch(contactsActions.addContactSuccess(data)))\r\n    .catch((error) => dispatch(contactsActions.addContactFailure(error)));\r\n};\r\n\r\nconst deleteContactOperations = (id) => (dispatch) => {\r\n  dispatch(contactsActions.deleteContactStart());\r\n\r\n  api\r\n    .deleteContact(id)\r\n    .then(() => dispatch(contactsActions.deleteContactSuccess(id)))\r\n    .catch((error) => dispatch(contactsActions.deleteContactFailure(error)));\r\n};\r\n\r\nexport default {\r\n  getAllContactsOperations,\r\n  addContactOperations,\r\n  deleteContactOperations,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport styles from \"./Phonebook.module.css\";\r\nimport contactsOperations from \"../redux/contacts/contactsOperations\";\r\n\r\nclass Phonebook extends Component {\r\n  state = {\r\n    contactName: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { contactName, number } = this.state;\r\n    const { addContact } = this.props;\r\n\r\n    this.setState({\r\n      contactName: \"\",\r\n      number: \"\",\r\n    });\r\n    addContact(contactName, number);\r\n  };\r\n\r\n  render() {\r\n    // console.log(this.props);\r\n    const { contactName, number } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.handleSubmit} style={{ marginLeft: \"30px\" }}>\r\n        <h2 className={styles.title} >Phonebook</h2>\r\n\r\n        <input\r\n          className={styles.inputName}\r\n          type=\"text\"\r\n          name=\"contactName\"\r\n          value={contactName}\r\n          onChange={this.handleChange}\r\n          placeholder=\"Enter name...\"\r\n          required\r\n        ></input>\r\n\r\n        <input\r\n          className={styles.inputNumber}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          onChange={this.handleChange}\r\n          placeholder=\"Number...\"\r\n          required\r\n        ></input>\r\n\r\n        <button type=\"submit\" className={styles.btn}>Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addContact: (name, number) =>\r\n    dispatch(contactsOperations.addContactOperations(name, number)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Phonebook);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport contactsOperations from \"../redux/contacts/contactsOperations\";\r\nimport styles from \"./OneContact.module.css\";\r\n\r\nconst OneContact = ({ contact: { id, name, number }, deleteContact }) => {\r\n  return (\r\n    <li className={styles.oneContact}>\r\n      <span>{name}: </span>\r\n      <span>{number}</span>\r\n      <button\r\n        type=\"button\"\r\n        className={styles.btnDelete}\r\n        onClick={deleteContact}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, { id }) => {\r\n  return {\r\n    deleteContact: () =>\r\n      dispatch(contactsOperations.deleteContactOperations(id)),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(OneContact);\r\n","import { createSelector } from \"reselect\";\r\n\r\nexport const getContact = (state) => state.contactRoot.contactReducer;\r\nexport const isLoading = (state) => state.contactRoot.loadingReducer;\r\nexport const getError = (state) => state.contactRoot.contactErrorReducer;\r\nexport const filterContact = (state) => state.contactRoot.filterReducer;\r\n// export const contactList = (state) => {\r\n//   return getContact(state).filter((contact) =>\r\n//     contact.name.toLowerCase().includes(filterContact(state).toLowerCase())\r\n//   );\r\n// };\r\nexport const contactList = createSelector(\r\n  [getContact, filterContact],\r\n  (contacts, searchInput) => {\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(searchInput.toLowerCase())\r\n    );\r\n  }\r\n);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport contactsAction from \"../redux/contacts/contactsAction\";\r\nimport { filterContact } from \"../redux/contacts/contactSelectors\";\r\n\r\nconst FilterContacts = ({ filter, onChange }) => {\r\n  return (\r\n    <>\r\n      <h4\r\n        style={{\r\n          marginLeft: \"30px\",\r\n          letterSpacing: \"1px\",\r\n        }}\r\n      >\r\n        Find contacts by name:\r\n      </h4>\r\n      <input\r\n        style={{ marginLeft: \"30px\", height: \"25px\", marginBottom: \"10px\" }}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={filter}\r\n        onChange={onChange}\r\n      ></input>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    filter: filterContact(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onChange: (e) => dispatch(contactsAction.filterContact(e.target.value)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterContacts);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport OneContact from \"../oneContact/OneContact\";\r\nimport FilterContacts from \"../filterContacts/FilterContacts\";\r\nimport contactsOperations from \"../redux/contacts/contactsOperations\";\r\nimport { contactList } from \"../redux/contacts/contactSelectors\";\r\n\r\nclass ContactList extends Component {\r\n  componentDidMount() {\r\n    const { getAllContacts } = this.props;\r\n    getAllContacts();\r\n  }\r\n\r\n  render() {\r\n    const { contactList, filter, onChange } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <h2 style={{ marginLeft: \"30px\", color: \"blue\" }}>Contacts</h2>\r\n        <FilterContacts filter={filter} onChange={onChange} />\r\n        <ul>\r\n          {contactList.map((contact) => (\r\n            <OneContact id={contact.id} contact={contact} key={contact.id} />\r\n          ))}\r\n        </ul>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(\"state\", state);\r\n  return {\r\n    contactList: contactList(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getAllContacts: () =>\r\n      dispatch(contactsOperations.getAllContactsOperations()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React, { Component, createContext } from \"react\";\r\n\r\nconst Context = createContext();\r\nconst themeConfig = {\r\n  light: {\r\n    fontColor: \"black\",\r\n    bodybg: \"white\",\r\n  },\r\n  dark: {\r\n    fontColor: \"white\",\r\n    bodybg: \"black\",\r\n  },\r\n};\r\n\r\nclass ThemeContext extends Component {\r\n  static Consumer = Context.Consumer;\r\n\r\n  toggleTheme = () => {\r\n    this.setState((prevTheme) => {\r\n      if (prevTheme.theme === \"light\") {\r\n        return { theme: \"dark\", themeConfig: themeConfig.dark };\r\n      } else {\r\n        return { theme: \"light\", themeConfig: themeConfig.light };\r\n      }\r\n    });\r\n  };\r\n\r\n  state = {\r\n    theme: \"light\",\r\n    themeConfig: themeConfig.light,\r\n    toggleTheme: this.toggleTheme,\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ThemeContext;\r\n","import React, { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Phonebook from \"./phonebook/Phonebook\";\nimport ContactList from \"./contactList/ContactList\";\nimport withTheme from \"./hoc/withTheme\";\n\nclass App extends Component {\n  state = {\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const contactStorage = localStorage.getItem(\"contacts\");\n    if (contactStorage) {\n      this.setState({ contacts: JSON.parse(contactStorage) });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  filterByName = () => {};\n\n  deleteContact = (id) => {};\n\n  render() {\n    const filterContact = this.filterByName();\n    // console.log(filterContact);\n    // console.log(this.props);\n    const {\n      themeConfig: { fontColor, bodybg },\n    } = this.props;\n    const { filter } = this.state;\n    return (\n      <div style={{ color: fontColor, background: bodybg }}>\n        <button\n          type=\"submit\"\n          style={{\n            marginLeft: \"30px\",\n            marginTop: \"20px\",\n            borderColor: \"white\",\n            height: \"35px\",\n            width: \"150px\",\n            backgroundColor: \"black\",\n            color: \"white\",\n            fontWeight: \"bold\",\n            letterSpacing: \"1px\",\n          }}\n          onClick={this.props.toggleTheme}\n        >\n          Change theme\n        </button>\n        <Phonebook name={this.state.name} number={this.state.number} />\n\n        <ContactList filter={filter} deleteContact={this.deleteContact} />\n      </div>\n    );\n  }\n}\n\nexport default withTheme(App);\n","import React from \"react\";\r\nimport ThemeContext from \"../themeContext/ThemeContext\";\r\n\r\nconst withTheme = (WrappedComponent) => {\r\n  return function WithTheme(props) {\r\n    return (\r\n      <ThemeContext.Consumer>\r\n        {(context) => {\r\n          // console.log(context);\r\n          return (\r\n            <WrappedComponent\r\n              {...props}\r\n              theme={context.theme}\r\n              themeConfig={context.themeConfig}\r\n              toggleTheme={context.toggleTheme}\r\n            />\r\n          );\r\n        }}\r\n      </ThemeContext.Consumer>\r\n    );\r\n  };\r\n};\r\n\r\nexport default withTheme;\r\n","import { combineReducers } from \"redux\";\r\nimport contactsType from \"./contactsType\";\r\n\r\nconst contactReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case contactsType.GET_CONTACT_SUCCESS:\r\n      return action.payload.contactList;\r\n\r\n    case contactsType.ADD_CONTACT_SUCCESS:\r\n      return [...state, action.payload.contact];\r\n\r\n    case contactsType.DELETE_CONTACT_SUCCESS:\r\n      return state.filter((contact) => contact.id !== action.payload.id);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst filterReducer = (state = \"\", action) => {\r\n  switch (action.type) {\r\n    case contactsType.FILTER_CONTACT:\r\n      return action.payload.name;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst loadingReducer = (state = false, { type }) => {\r\n  switch (type) {\r\n    case contactsType.GET_CONTACT_START:\r\n    case contactsType.ADD_CONTACT_START:\r\n    case contactsType.DELETE_CONTACT_START:\r\n      return true;\r\n\r\n    case contactsType.GET_CONTACT_SUCCESS:\r\n    case contactsType.GET_CONTACT_FAILURE:\r\n\r\n    case contactsType.ADD_CONTACT_SUCCESS:\r\n    case contactsType.ADD_CONTACT_FAILURE:\r\n\r\n    case contactsType.DELETE_CONTACT_SUCCESS:\r\n    case contactsType.DELETE_CONTACT_FAILURE:\r\n      return false;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst contactErrorReducer = (state = null, { type, payload }) => {\r\n  switch (type) {\r\n    case contactsType.GET_CONTACT_FAILURE:\r\n    case contactsType.ADD_CONTACT_FAILURE:\r\n    case contactsType.DELETE_CONTACT_FAILURE:\r\n      return payload.error;\r\n\r\n    case contactsType.GET_CONTACT_START:\r\n    case contactsType.ADD_CONTACT_START:\r\n    case contactsType.DELETE_CONTACT_START:\r\n      return null;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  contactReducer: contactReducer,\r\n  filterReducer: filterReducer,\r\n  loading: loadingReducer,\r\n  contactError: contactErrorReducer,\r\n});\r\n","import { combineReducers } from \"redux\";\r\nimport contactReducer from \"./contacts/contactsReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  contactRoot: contactReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport rootReducer from \"./rootReducer\";\r\n\r\nconst middleware = [thunk];\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport ThemeContext from \"./themeContext/ThemeContext\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <ThemeContext>\n      <App />\n    </ThemeContext>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Phonebook_title__4WToU\",\"btn\":\"Phonebook_btn__1XHXj\",\"inputName\":\"Phonebook_inputName__3Gnj7\",\"inputNumber\":\"Phonebook_inputNumber__32Vc7\"};"],"sourceRoot":""}